from kivy.config import Config
Config.set('input', 'mouse', 'mouse,multitouch_on_demand')
Config.set('graphics', 'width', '800')
Config.set('graphics', 'height', '800')
Config.set('graphics', 'minimum_width', '400')
Config.set('graphics', 'minimum_height', '400')
from kivy.lang import Builder
from kivy.uix.boxlayout import BoxLayout
from kivy.properties import ObjectProperty

from kivymd.app import MDApp
# KV = '''
# <ContentNavigationDrawer>:

#     ScrollView:

#         MDList:

#             OneLineListItem:
#                 text: "Screen 1"
#                 on_press:
#                     root.screen_manager.current = "scr 1"

#             OneLineListItem:
#                 text: "Screen 2"
#                 on_press:
#                     root.screen_manager.current = "scr 2"


# Screen:

#     MDTopAppBar:
#         id: toolbar
#         pos_hint: {"top": 1}
#         elevation: 10
#         title: "Book Reader"
        

        
#     MDNavigationLayout:
#         x: toolbar.height

#         ScreenManager:
#             id: screen_manager

#             Screen:
#                 name: "scr 1"

#                 MDLabel:
#                     text: "Screen 1"
#                     halign: "center"
                
#                     Button:
#                         text: "gay"
#                         pos_hint: {"x":50}
#                         size_hint: (0.5, 0.5)
#                         on_press:
#                             root.screen_manager.current = "scr 2"

#             Screen:
#                 name: "scr 2"

#                 MDLabel:
#                     text: "Screen 2"
#                     halign: "center"

#         MDNavigationDrawer:
#             state: "close"
#             status: "closed"
#             enable_swiping: False
#             id: nav_drawer
#             scrim_color: [0, 0, 0, 0]
#             pos: 0,-60
#             close_on_click: False
#             ContentNavigationDrawer:
#                 screen_manager: screen_manager
#                 nav_drawer: nav_drawer


# '''
KV = '''

<ContentNavigationDrawer>:

    ScrollView:

        MDList:

            OneLineListItem:
                text: "Screen 1"
                on_press:
                    root.screen_manager.current = "scr 1"

            OneLineListItem:
                text: "Screen 2"
                on_press:
                    root.screen_manager.current = "scr 2"


Screen:

    MDTopAppBar:
        id: toolbar
        pos_hint: {"top": 1}
        elevation: 10
        title: "Book Reader"


    FloatLayout: 
        size: root.width, root.height



    ScreenManager:
        id: screen_manager

        Screen:
            name: "Main Menu"

            MDLabel:
                text: "Main Menu"
                halign: "center"

        Screen:
            name: "Read Currently Open File Screen"
            MDLabel:
                text: "Screen 2"
                halign: "center"
        
        Screen:
            name: "Settings Screen"
            MDLabel:
                text: "Settings"
                halign: "center"


    BoxLayout:
        id: nav_bar
        orientation: 'vertical'

        MDIconButton:
            size_hint: (0.3, 0.3)
            on_press: screen_manager.current = "Main Menu"
        
        MDIconButton:
            color : [1.0, 1.0, 1.0, 1.0]
            size_hint: (0.3, 0.3)
            on_press: screen_manager.current = "Main Menu"

        MDIconButton:
            md_bg_color : [1.0, 1.0, 1.0, 1.0]
            size_hint: (0.3, 0.3)
            icon: "icons and images\icons8-settings-500.png" 
            on_press: screen_manager.current = "Settings Screen"

'''

#  setup main menu, get it to add elements for every book, add sort and filter buttons, books, series, authors, 
#  see if you can get the location of the mouse and hide the navbar in the currently reading frame and only show it if mouse is in position
#  get the box layout to change position
#  you'll have to redo the return func somehow


class ContentNavigationDrawer(BoxLayout):
    screen_manager = ObjectProperty()
    nav_drawer = ObjectProperty()


class FileReaderApp(MDApp):
    def build(self):
        self.title = "Book Reader"
        return Builder.load_string(KV)


FileReaderApp().run()